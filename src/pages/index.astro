---
import MainLayout from "../layouts/MainLayout.astro";
import App from "../components/App.tsx";
import type { Album } from "../types";
import { metadataPackageSchema } from "../types";
import _metadata from "../../public/photos/metadata.json";

import { glob } from "glob";

// TODO: Consider replacing the photoset logic with the `originals` metadata field
const pathRe = /^photos\/((.+)\/.+)_([^.]+)(.[A-Za-z]+)$/;

const parse = metadataPackageSchema.safeParse(_metadata);
if (!parse.success) {
  console.error(parse.error);
  throw new Error(`Could not parse metadata: ${parse.error.message}`);
}
const metadata = parse.data;

const albumMeta = {
  bwca: { name: "Boundary Waters", desc: "Boundary Waters Canoe Area" },
  japan: {
    name: "Japan",
    desc: "Photos from Japan: Tokyo, Kyoto, Hiroshima, and Osaka",
  },
  europe: { name: "Europe", desc: "Photos from France and Iceland" },
  colorado: {
    name: "Colorado",
    desc: "Photos taken near where I live in Colorado",
  },
} as const;

const urls = await glob("photos/**/*.jpg", { cwd: "public" });
const albums: Record<string, Album> = {};

for (const url of urls) {
  const match = url.match(pathRe);
  if (!match) throw new Error(`Could not parse path into album: ${url}`);
  const [, photoset, album, size, ext] = match;
  if (!photoset || !album || !size)
    throw new Error(`Path parsing regex is malformed`);

  if (!albums[album]) {
    const meta = albumMeta[album as keyof typeof albumMeta];
    if (!albumMeta) throw new Error(`Album metadata not found for ${album}`);
    albums[album] = { name: meta.name, desc: meta.desc, photosets: {} };
  }
  const a = albums[album]!;

  const metaKey = `${photoset}_${size}${ext}`;
  const metaProc = metadata.processed[metaKey];
  if (!metaProc) throw new Error(`Processed metadata not found for ${metaKey}`);
  const metaOrig = metadata.original[metaProc.original];
  if (!metaOrig)
    throw new Error(`Original metadata not found for ${metaProc.original}`);

  if (!a.photosets[photoset]) {
    a.photosets[photoset] = { metadata: metaOrig, sizes: {} };
  }
  a.photosets[photoset]!.sizes[size] = {
    url,
    width: metaProc.width,
    height: metaProc.height,
  };
}
---

<MainLayout>
  <App client:only albums={albums} />
</MainLayout>
